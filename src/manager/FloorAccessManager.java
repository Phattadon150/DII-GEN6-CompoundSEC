package manager;

import model.Role;
import java.time.LocalTime;
import java.util.HashMap;
import java.util.Map;

public class FloorAccessManager {
    private Map<Integer, Role> floorAccessRules = new HashMap<>();
    private Map<Role, LocalTime[]> roleTimeRestrictions = new HashMap<>();

    public FloorAccessManager() {
        // üîπ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡∏±‡πâ‡∏ô
        floorAccessRules.put(1, Role.ADMIN);
        floorAccessRules.put(2, Role.PHYSICIAN);
        floorAccessRules.put(3, Role.NURSE);
        floorAccessRules.put(4, Role.PHYSICIAN);

        // üîπ ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤-‡∏≠‡∏≠‡∏Å
        setDefaultTimeRestrictions();
    }

    // üîπ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    private void setDefaultTimeRestrictions() {
        roleTimeRestrictions.put(Role.ADMIN, new LocalTime[]{LocalTime.of(0, 0), LocalTime.of(23, 59)});  // Admin ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏î‡πâ‡∏ï‡∏•‡∏≠‡∏î
        roleTimeRestrictions.put(Role.PHYSICIAN, new LocalTime[]{LocalTime.of(8, 0), LocalTime.of(18, 0)}); // ‡∏´‡∏°‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏î‡πâ 8:00 - 18:00
        roleTimeRestrictions.put(Role.NURSE, new LocalTime[]{LocalTime.of(6, 0), LocalTime.of(22, 0)});  // ‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏î‡πâ 6:00 - 22:00
    }

    public boolean canAccess(int floor, Role userRole) {
        return floorAccessRules.getOrDefault(floor, Role.ADMIN) == userRole;
    }

    public boolean isWithinAccessTime(Role userRole) {
        LocalTime now = LocalTime.now();
        LocalTime[] allowedTime = roleTimeRestrictions.get(userRole);
        return now.isAfter(allowedTime[0]) && now.isBefore(allowedTime[1]);
    }

    // üîπ ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤-‡∏≠‡∏≠‡∏Å‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö Role
    public void setTimeRestriction(Role role, LocalTime startTime, LocalTime endTime) {
        roleTimeRestrictions.put(role, new LocalTime[]{startTime, endTime});
    }

    public LocalTime[] getRoleTimeRestriction(Role role) {
        return roleTimeRestrictions.get(role);
    }
}
